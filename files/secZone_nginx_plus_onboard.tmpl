#!/bin/bash

sudo mkdir /etc/ssl/nginx
cd /etc/ssl/nginx

cat << 'EOF' > /etc/ssl/nginx/nginx-repo.crt
${nginxRepoCrt}
EOF

cat << 'EOF' > /etc/ssl/nginx/nginx-repo.key
${nginxRepoKey}
EOF

sudo apt-get install apt-transport-https lsb-release ca-certificates wget gnupg2 ubuntu-keyring
wget -qO - https://cs.nginx.com/static/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null
wget -qO - https://cs.nginx.com/static/keys/app-protect-security-updates.key | gpg --dearmor | sudo tee /usr/share/keyrings/app-protect-security-updates.gpg >/dev/null
printf "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://pkgs.nginx.com/plus/ubuntu `lsb_release -cs` nginx-plus\n" | sudo tee /etc/apt/sources.list.d/nginx-plus.list
sudo wget -P /etc/apt/apt.conf.d https://cs.nginx.com/static/files/90pkgs-nginx
sudo apt-get update -y

sudo apt-get install -y nginx-plus
echo "===== WAS NGINX PLUS INSTALLED, CHECK VERSION NEXT ====="
nginx -v
echo "========================================================"

sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj "/C=US/ST=Ohio/L=Col/O=SE/OU=SE_Test/CN=server.proxy.com" -keyout /etc/ssl/private/server.proxy.com.key -out /etc/ssl/certs/server.proxy.com.crt
sudo openssl dhparam -out /etc/ssl/nginx/dhparam.pem 2048

cat << 'EOF' > /etc/ssl/nginx/self-signed.conf
ssl_certificate /etc/ssl/certs/server.proxy.com.crt;
ssl_certificate_key /etc/ssl/private/server.proxy.com.key;
EOF

echo "Adding SSL/TLS settings"
cat << 'EOF' > /etc/ssl/nginx/ssl-params.conf
ssl_protocols TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_dhparam /etc/ssl/nginx/dhparam.pem;
ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
ssl_session_timeout  10m;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off; # Requires nginx >= 1.5.9
ssl_stapling on; # Requires nginx >= 1.3.7
ssl_stapling_verify on; # Requires nginx => 1.3.7
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
# Disable strict transport security for now. You can uncomment the following
# line if you understand the implications.
# add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
EOF

cat << EOF > /etc/nginx/conf.d/default.conf
# Default server configuration
#
server {
	listen 80 default_server;

	root /usr/share/nginx/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	resolver  10.0.0.2  valid=10s ipv6=off;

    location /leonardo/ {
            proxy_set_header        Host    ${lattice_service_dns};
            proxy_http_version 1.1;
            proxy_pass http://${lattice_service_dns}/;
    }

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files \$uri \$uri/ =404;
	}
}

#/etc/nginx/sites-available/example.com
# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     include snippets/self-signed.conf;
#     include snippets/ssl-params.conf;

#     server_name server.proxy.com www.server.proxy.com;

#     root /var/www/html;
#     index index.html index.htm index.nginx-debian.html;

# }
# server {
#     listen 4443 ssl http2;
#     include snippets/self-signed.conf;
#     include snippets/ssl-params.conf;

#     server_name server.proxy.com www.server.proxy.com;

#     root /var/www/html;
#     index index.html index.htm index.nginx-debian.html;

# }
EOF


echo "Reload Nginx Plus"
# nginx -s reload

# echo "Re-starting Nginx with 'systemctl restart nginx'"
# systemctl restart nginx


### Locust configs ###
sudo apt install python3-pip -y
sudo pip3 install locust
cat << 'EOF' > /home/ubuntu/locustfile.py
import random,string
from locust import HttpUser, task

class proxyTesting(HttpUser):
    host = "https://ubuntu.com"

    @task
    def get(self):
        self.client.get("/")

EOF
sudo sh -c 'echo export HTTP_PROXY="lsimon.proxy.com:11443" >> /etc/environment'
sudo sh -c 'echo export HTTPS_PROXY="lsimon.proxy.com:11443" >> /etc/environment'
sudo sh -c 'echo "Acquire::http::Proxy \"http://lsimon.proxy.com:11443/\";" >> /etc/apt/apt.conf.d/proxy.conf'
sudo sh -c 'echo "Acquire::https::Proxy \"https://lsimon.proxy.com:11443/\";" >> /etc/apt/apt.conf.d/proxy.conf'

echo "*****+++++=====  CLOUD INIT SCRIPT FINISHED  *****+++++====="